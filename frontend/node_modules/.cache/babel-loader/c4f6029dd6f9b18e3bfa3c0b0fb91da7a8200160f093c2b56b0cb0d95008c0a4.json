{"ast":null,"code":"var _jsxFileName = \"/root/home/CP5106/frontend/src/pages/CourseDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CourseDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseDetails = ({\n  user\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const [unlockThreshold, setUnlockThreshold] = useState(120);\n  const [courseList, setCourseList] = useState([]);\n  const courseId = String(id);\n\n  // Check if the course is locked\n  useEffect(() => {\n    const checkCourseAccess = async () => {\n      try {\n        // Fetch ordered course list for previous-course check\n        const listRes = await axios.get('/api/courses');\n        const list = listRes.data || [];\n        setCourseList(list);\n\n        // Fetch unlock threshold (requires auth)\n        try {\n          var _settingRes$data;\n          const settingRes = await axios.get('/api/settings/unlock-threshold');\n          const value = Number((_settingRes$data = settingRes.data) === null || _settingRes$data === void 0 ? void 0 : _settingRes$data.value);\n          if (Number.isFinite(value)) {\n            setUnlockThreshold(value);\n          }\n        } catch (err) {\n          console.error('Error fetching unlock threshold:', err);\n        }\n\n        // First course in list is always accessible\n        const index = list.findIndex(c => String(c.id) === String(courseId));\n        if (index === 0) {\n          setIsLocked(false);\n        } else {\n          // Check previous course time\n          const progressRes = await axios.get('/api/courses/progress');\n          const previousCourseId = index > 0 ? String(list[index - 1].id) : null;\n          const previousCourseTime = previousCourseId ? Number(progressRes.data[previousCourseId] || 0) : 0;\n          if (index > 0 && previousCourseTime < (Number.isFinite(unlockThreshold) ? unlockThreshold : 120)) {\n            setIsLocked(true);\n            alert(`This course is locked. You need to spend at least ${Number.isFinite(unlockThreshold) ? unlockThreshold : 120} seconds on the previous course to unlock it.`);\n            navigate('/');\n            return;\n          } else {\n            setIsLocked(false);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking course access:', error);\n        navigate('/');\n      }\n    };\n    checkCourseAccess();\n  }, [courseId, navigate, unlockThreshold]);\n\n  // Function to record course visit time\n  const recordVisitTime = async duration => {\n    try {\n      if (localStorage.getItem('token') && !isLocked) {\n        await axios.post('/api/courses/time', {\n          courseId: courseId,\n          duration: Math.round(duration)\n        });\n        console.log(`Recorded ${Math.round(duration)} seconds for course ${id}`);\n      }\n    } catch (error) {\n      console.error('Failed to record course time:', error);\n    }\n  };\n  useEffect(() => {\n    // Only fetch course details and start timer if not locked\n    if (!isLocked) {\n      const timeStart = new Date();\n      setStartTime(timeStart);\n      const fetchCourseDetails = async () => {\n        try {\n          const res = await axios.get(`/api/courses/${courseId}`);\n          setCourse(res.data);\n          setLoading(false);\n        } catch (err) {\n          setCourse({\n            title: 'Course Not Found',\n            content: '<p>The requested course could not be found.</p>'\n          });\n          setLoading(false);\n        }\n      };\n      fetchCourseDetails();\n      return () => {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - timeStart) / 1000;\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      };\n    }\n  }, [id, isLocked]);\n\n  // Record time when user navigates away but stays in the app\n  useEffect(() => {\n    const handleBeforeNavigate = () => {\n      if (startTime && !isLocked) {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - startTime) / 1000;\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeNavigate);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeNavigate);\n    };\n  }, [startTime, id, isLocked]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-details-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-back-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn back-btn\",\n          children: \"\\u2190 Back to Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-details-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: course === null || course === void 0 ? void 0 : course.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: (course === null || course === void 0 ? void 0 : course.content) || ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseDetails, \"4LBTaMchfJAA7Pn6cJ7fzKjnkpY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CourseDetails;\nexport default CourseDetails;\nvar _c;\n$RefreshReg$(_c, \"CourseDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","axios","jsxDEV","_jsxDEV","CourseDetails","user","_s","id","navigate","course","setCourse","loading","setLoading","startTime","setStartTime","isLocked","setIsLocked","unlockThreshold","setUnlockThreshold","courseList","setCourseList","courseId","String","checkCourseAccess","listRes","get","list","data","_settingRes$data","settingRes","value","Number","isFinite","err","console","error","index","findIndex","c","progressRes","previousCourseId","previousCourseTime","alert","recordVisitTime","duration","localStorage","getItem","post","Math","round","log","timeStart","Date","fetchCourseDetails","res","title","content","timeEnd","durationInSeconds","handleBeforeNavigate","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/root/home/CP5106/frontend/src/pages/CourseDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CourseDetails.css';\n\nconst CourseDetails = ({ user }) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const [unlockThreshold, setUnlockThreshold] = useState(120);\n  const [courseList, setCourseList] = useState([]);\n  const courseId = String(id);\n\n  // Check if the course is locked\n  useEffect(() => {\n    const checkCourseAccess = async () => {\n      try {\n        // Fetch ordered course list for previous-course check\n        const listRes = await axios.get('/api/courses');\n        const list = listRes.data || [];\n        setCourseList(list);\n\n        // Fetch unlock threshold (requires auth)\n        try {\n          const settingRes = await axios.get('/api/settings/unlock-threshold');\n          const value = Number(settingRes.data?.value);\n          if (Number.isFinite(value)) {\n            setUnlockThreshold(value);\n          }\n        } catch (err) {\n          console.error('Error fetching unlock threshold:', err);\n        }\n\n        // First course in list is always accessible\n        const index = list.findIndex(c => String(c.id) === String(courseId));\n        if (index === 0) {\n          setIsLocked(false);\n        } else {\n          // Check previous course time\n          const progressRes = await axios.get('/api/courses/progress');\n          const previousCourseId = index > 0 ? String(list[index - 1].id) : null;\n          const previousCourseTime = previousCourseId ? Number(progressRes.data[previousCourseId] || 0) : 0;\n\n          if (index > 0 && previousCourseTime < (Number.isFinite(unlockThreshold) ? unlockThreshold : 120)) {\n            setIsLocked(true);\n            alert(`This course is locked. You need to spend at least ${Number.isFinite(unlockThreshold) ? unlockThreshold : 120} seconds on the previous course to unlock it.`);\n            navigate('/');\n            return;\n          } else {\n            setIsLocked(false);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking course access:', error);\n        navigate('/');\n      }\n    };\n\n    checkCourseAccess();\n  }, [courseId, navigate, unlockThreshold]);\n\n  // Function to record course visit time\n  const recordVisitTime = async (duration) => {\n    try {\n      if (localStorage.getItem('token') && !isLocked) {\n        await axios.post('/api/courses/time', { \n          courseId: courseId,\n          duration: Math.round(duration)\n        });\n        console.log(`Recorded ${Math.round(duration)} seconds for course ${id}`);\n      }\n    } catch (error) {\n      console.error('Failed to record course time:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Only fetch course details and start timer if not locked\n    if (!isLocked) {\n      const timeStart = new Date();\n      setStartTime(timeStart);\n\n      const fetchCourseDetails = async () => {\n        try {\n          const res = await axios.get(`/api/courses/${courseId}`);\n          setCourse(res.data);\n          setLoading(false);\n        } catch (err) {\n          setCourse({ title: 'Course Not Found', content: '<p>The requested course could not be found.</p>' });\n          setLoading(false);\n        }\n      };\n\n      fetchCourseDetails();\n\n      return () => {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - timeStart) / 1000;\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      };\n    }\n  }, [id, isLocked]);\n\n  // Record time when user navigates away but stays in the app\n  useEffect(() => {\n    const handleBeforeNavigate = () => {\n      if (startTime && !isLocked) {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - startTime) / 1000;\n        \n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeNavigate);\n    \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeNavigate);\n    };\n  }, [startTime, id, isLocked]);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"course-details-container\">\n      <div className=\"course-details-content\">\n        <div className=\"course-back-button\">\n          <Link to=\"/\" className=\"btn back-btn\">← Back to Courses</Link>\n        </div>\n        \n        <div className=\"course-details-body\">\n          <h2>{course?.title}</h2>\n          <div dangerouslySetInnerHTML={{ __html: course?.content || '' }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}