{"ast":null,"code":"var _jsxFileName = \"/root/home/CP5106/frontend/src/pages/CourseDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CourseDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n\n  // Function to record course visit time\n  const recordVisitTime = async duration => {\n    try {\n      // Only record if user is logged in (token exists)\n      if (localStorage.getItem('token')) {\n        await axios.post('/api/courses/time', {\n          courseId: id,\n          duration: Math.round(duration) // Duration in seconds\n        });\n        console.log(`Recorded ${Math.round(duration)} seconds for course ${id}`);\n      }\n    } catch (error) {\n      console.error('Failed to record course time:', error);\n    }\n  };\n  useEffect(() => {\n    // Start the timer when the component mounts\n    const timeStart = new Date();\n    setStartTime(timeStart);\n\n    // Fetch course details\n    const fetchCourseDetails = () => {\n      const courseDetails = {\n        1: {\n          title: 'Introduction to Programming',\n          content: `\n            <h2>Introduction to Programming</h2>\n            \n            <p>This comprehensive course provides a solid foundation in programming fundamentals that apply across various languages and platforms. Whether you're a complete beginner or looking to refresh your knowledge, this course will equip you with essential skills.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Core programming concepts like variables, data types, and operators</li>\n              <li>Control structures: conditionals, loops, and functions</li>\n              <li>Basic algorithms and problem-solving techniques</li>\n              <li>Introduction to object-oriented programming principles</li>\n              <li>Fundamental data structures</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course consists of 10 modules with hands-on exercises, coding challenges, and a final project where you'll build a functional application from scratch.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>No prior programming experience required. Just bring your curiosity and willingness to learn!</p>\n          `\n        },\n        2: {\n          title: 'Web Development Fundamentals',\n          content: `\n            <h2>Web Development Fundamentals</h2>\n            \n            <p>Discover the essential technologies that power the modern web. This course provides a comprehensive introduction to front-end web development, teaching you how to create responsive, interactive websites.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>HTML5 for structuring web content</li>\n              <li>CSS3 for styling and layouts</li>\n              <li>JavaScript fundamentals for interactive websites</li>\n              <li>Responsive design principles</li>\n              <li>Web accessibility best practices</li>\n              <li>Version control with Git</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This course features 12 modules with progressive projects that build on each other, culminating in a portfolio-ready website that showcases your skills.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic computer skills and familiarity with browsing the web. No coding experience required.</p>\n          `\n        },\n        3: {\n          title: 'Database Design',\n          content: `\n            <h2>Database Design</h2>\n            \n            <p>Master the art and science of database design with this in-depth course. Learn how to create efficient, scalable, and reliable database structures that can support complex applications.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Relational database concepts and theory</li>\n              <li>Entity-Relationship modeling</li>\n              <li>Normalization techniques (1NF through BCNF)</li>\n              <li>SQL for data definition, manipulation, and queries</li>\n              <li>Indexing and optimization strategies</li>\n              <li>Transaction management and concurrency control</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course includes 8 comprehensive modules with case studies, practical exercises, and a capstone project where you'll design and implement a complete database system.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic understanding of data organization concepts. No specific database experience required.</p>\n          `\n        },\n        4: {\n          title: 'Mobile App Development',\n          content: `\n            <h2>Mobile App Development</h2>\n            \n            <p>Learn to build cross-platform mobile applications that work seamlessly on both iOS and Android. This course focuses on modern frameworks that allow you to write once and deploy everywhere.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Cross-platform development fundamentals</li>\n              <li>UI/UX design principles for mobile</li>\n              <li>State management and data flow</li>\n              <li>API integration and offline functionality</li>\n              <li>Native device features (camera, GPS, notifications)</li>\n              <li>App store deployment processes</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This hands-on course includes 10 modules with progressive app-building exercises, culminating in publishing a fully functional mobile application.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic programming knowledge in JavaScript or similar language. Familiarity with HTML/CSS is beneficial but not required.</p>\n          `\n        },\n        5: {\n          title: 'Machine Learning Basics',\n          content: `\n            <h2>Machine Learning Basics</h2>\n            \n            <p>Dive into the fascinating world of machine learning and artificial intelligence. This course demystifies complex ML concepts and teaches you how to build and deploy practical machine learning models.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Supervised and unsupervised learning algorithms</li>\n              <li>Data preprocessing and feature engineering</li>\n              <li>Model training, validation, and evaluation</li>\n              <li>Classification, regression, and clustering techniques</li>\n              <li>Introduction to neural networks</li>\n              <li>Ethical considerations in ML applications</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course comprises 9 modules with practical exercises using popular ML libraries, real-world datasets, and a final project applying ML to solve a business problem.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic programming experience and fundamental statistics knowledge. Familiarity with Python is highly recommended.</p>\n          `\n        },\n        6: {\n          title: 'Cloud Computing',\n          content: `\n            <h2>Cloud Computing</h2>\n            \n            <p>Explore the power of cloud technologies and learn how to leverage cloud platforms for scalable, resilient, and cost-effective application deployment.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Cloud service models (IaaS, PaaS, SaaS)</li>\n              <li>Cloud deployment architectures</li>\n              <li>Virtualization and containerization technologies</li>\n              <li>Serverless computing paradigms</li>\n              <li>Cloud security and compliance</li>\n              <li>Cost optimization strategies</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This course includes 8 comprehensive modules with hands-on labs, infrastructure-as-code exercises, and a capstone project deploying a full-stack application to the cloud.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic understanding of networking concepts and some programming experience. Familiarity with Linux command line is beneficial.</p>\n          `\n        },\n        7: {\n          title: 'Cybersecurity Essentials',\n          content: `\n            <h2>Cybersecurity Essentials</h2>\n            \n            <p>Develop crucial cybersecurity skills to protect systems, networks, and data from digital threats. This course covers fundamental security concepts and practical defense techniques.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Security principles and risk management</li>\n              <li>Network security and monitoring</li>\n              <li>Authentication and access control</li>\n              <li>Common vulnerabilities and attack vectors</li>\n              <li>Encryption and secure communication</li>\n              <li>Incident response and recovery</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course features 10 modules with practical labs, security simulations, and a comprehensive security assessment project for a sample organization.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic understanding of computer networks and operating systems. No specific security background required.</p>\n          `\n        },\n        8: {\n          title: 'Data Structures and Algorithms',\n          content: `\n            <h2>Data Structures and Algorithms</h2>\n            \n            <p>Master the fundamental building blocks of efficient software with this deep dive into data structures and algorithms. Learn how to write optimized code that can handle complex computational challenges.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Array-based structures and linked lists</li>\n              <li>Stacks, queues, and hash tables</li>\n              <li>Trees, graphs, and their traversal algorithms</li>\n              <li>Sorting and searching algorithms</li>\n              <li>Algorithm analysis and Big O notation</li>\n              <li>Problem-solving strategies and optimization techniques</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This rigorous course includes 12 modules with coding challenges, algorithm implementations, and competitive programming exercises to reinforce concepts.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Solid programming experience in at least one language. Understanding of basic mathematical concepts.</p>\n          `\n        },\n        9: {\n          title: 'DevOps Practices',\n          content: `\n            <h2>DevOps Practices</h2>\n            \n            <p>Bridge the gap between development and operations with modern DevOps methodologies. Learn how to streamline software delivery through automation, collaboration, and continuous improvement.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Continuous Integration/Continuous Deployment (CI/CD)</li>\n              <li>Infrastructure as Code (IaC)</li>\n              <li>Configuration management and orchestration</li>\n              <li>Monitoring, logging, and observability</li>\n              <li>Microservices and containerization</li>\n              <li>DevSecOps principles</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course consists of 9 modules with hands-on labs implementing full DevOps pipelines and a capstone project automating the deployment of a complete application.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic knowledge of software development and system administration. Familiarity with command-line interfaces and version control.</p>\n          `\n        }\n      };\n      if (courseDetails[id]) {\n        setCourse(courseDetails[id]);\n      } else {\n        setCourse({\n          title: 'Course Not Found',\n          content: '<p>The requested course could not be found.</p>'\n        });\n      }\n      setLoading(false);\n    };\n    fetchCourseDetails();\n\n    // Cleanup function that runs when the component unmounts\n    return () => {\n      const timeEnd = new Date();\n      const durationInSeconds = (timeEnd - timeStart) / 1000;\n\n      // Only record time if the user spent at least 1 second on the page\n      if (durationInSeconds >= 1) {\n        recordVisitTime(durationInSeconds);\n      }\n    };\n  }, [id]);\n\n  // Record time when user navigates away but stays in the app\n  useEffect(() => {\n    const handleBeforeNavigate = () => {\n      if (startTime) {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - startTime) / 1000;\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      }\n    };\n\n    // Listen for route changes within the app\n    window.addEventListener('beforeunload', handleBeforeNavigate);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeNavigate);\n    };\n  }, [startTime, id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-details-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-back-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn back-btn\",\n          children: \"\\u2190 Back to Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-details-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: course.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseDetails, \"GDJUzPkt+NN1h8Uzs2XMxfUwRVA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CourseDetails;\nexport default CourseDetails;\nvar _c;\n$RefreshReg$(_c, \"CourseDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","axios","jsxDEV","_jsxDEV","CourseDetails","_s","id","navigate","course","setCourse","loading","setLoading","startTime","setStartTime","recordVisitTime","duration","localStorage","getItem","post","courseId","Math","round","console","log","error","timeStart","Date","fetchCourseDetails","courseDetails","title","content","timeEnd","durationInSeconds","handleBeforeNavigate","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/root/home/CP5106/frontend/src/pages/CourseDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CourseDetails.css';\n\nconst CourseDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n\n  // Function to record course visit time\n  const recordVisitTime = async (duration) => {\n    try {\n      // Only record if user is logged in (token exists)\n      if (localStorage.getItem('token')) {\n        await axios.post('/api/courses/time', { \n          courseId: id,\n          duration: Math.round(duration) // Duration in seconds\n        });\n        console.log(`Recorded ${Math.round(duration)} seconds for course ${id}`);\n      }\n    } catch (error) {\n      console.error('Failed to record course time:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Start the timer when the component mounts\n    const timeStart = new Date();\n    setStartTime(timeStart);\n\n    // Fetch course details\n    const fetchCourseDetails = () => {\n      const courseDetails = {\n        1: {\n          title: 'Introduction to Programming',\n          content: `\n            <h2>Introduction to Programming</h2>\n            \n            <p>This comprehensive course provides a solid foundation in programming fundamentals that apply across various languages and platforms. Whether you're a complete beginner or looking to refresh your knowledge, this course will equip you with essential skills.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Core programming concepts like variables, data types, and operators</li>\n              <li>Control structures: conditionals, loops, and functions</li>\n              <li>Basic algorithms and problem-solving techniques</li>\n              <li>Introduction to object-oriented programming principles</li>\n              <li>Fundamental data structures</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course consists of 10 modules with hands-on exercises, coding challenges, and a final project where you'll build a functional application from scratch.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>No prior programming experience required. Just bring your curiosity and willingness to learn!</p>\n          `\n        },\n        2: {\n          title: 'Web Development Fundamentals',\n          content: `\n            <h2>Web Development Fundamentals</h2>\n            \n            <p>Discover the essential technologies that power the modern web. This course provides a comprehensive introduction to front-end web development, teaching you how to create responsive, interactive websites.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>HTML5 for structuring web content</li>\n              <li>CSS3 for styling and layouts</li>\n              <li>JavaScript fundamentals for interactive websites</li>\n              <li>Responsive design principles</li>\n              <li>Web accessibility best practices</li>\n              <li>Version control with Git</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This course features 12 modules with progressive projects that build on each other, culminating in a portfolio-ready website that showcases your skills.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic computer skills and familiarity with browsing the web. No coding experience required.</p>\n          `\n        },\n        3: {\n          title: 'Database Design',\n          content: `\n            <h2>Database Design</h2>\n            \n            <p>Master the art and science of database design with this in-depth course. Learn how to create efficient, scalable, and reliable database structures that can support complex applications.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Relational database concepts and theory</li>\n              <li>Entity-Relationship modeling</li>\n              <li>Normalization techniques (1NF through BCNF)</li>\n              <li>SQL for data definition, manipulation, and queries</li>\n              <li>Indexing and optimization strategies</li>\n              <li>Transaction management and concurrency control</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course includes 8 comprehensive modules with case studies, practical exercises, and a capstone project where you'll design and implement a complete database system.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic understanding of data organization concepts. No specific database experience required.</p>\n          `\n        },\n        4: {\n          title: 'Mobile App Development',\n          content: `\n            <h2>Mobile App Development</h2>\n            \n            <p>Learn to build cross-platform mobile applications that work seamlessly on both iOS and Android. This course focuses on modern frameworks that allow you to write once and deploy everywhere.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Cross-platform development fundamentals</li>\n              <li>UI/UX design principles for mobile</li>\n              <li>State management and data flow</li>\n              <li>API integration and offline functionality</li>\n              <li>Native device features (camera, GPS, notifications)</li>\n              <li>App store deployment processes</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This hands-on course includes 10 modules with progressive app-building exercises, culminating in publishing a fully functional mobile application.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic programming knowledge in JavaScript or similar language. Familiarity with HTML/CSS is beneficial but not required.</p>\n          `\n        },\n        5: {\n          title: 'Machine Learning Basics',\n          content: `\n            <h2>Machine Learning Basics</h2>\n            \n            <p>Dive into the fascinating world of machine learning and artificial intelligence. This course demystifies complex ML concepts and teaches you how to build and deploy practical machine learning models.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Supervised and unsupervised learning algorithms</li>\n              <li>Data preprocessing and feature engineering</li>\n              <li>Model training, validation, and evaluation</li>\n              <li>Classification, regression, and clustering techniques</li>\n              <li>Introduction to neural networks</li>\n              <li>Ethical considerations in ML applications</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course comprises 9 modules with practical exercises using popular ML libraries, real-world datasets, and a final project applying ML to solve a business problem.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic programming experience and fundamental statistics knowledge. Familiarity with Python is highly recommended.</p>\n          `\n        },\n        6: {\n          title: 'Cloud Computing',\n          content: `\n            <h2>Cloud Computing</h2>\n            \n            <p>Explore the power of cloud technologies and learn how to leverage cloud platforms for scalable, resilient, and cost-effective application deployment.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Cloud service models (IaaS, PaaS, SaaS)</li>\n              <li>Cloud deployment architectures</li>\n              <li>Virtualization and containerization technologies</li>\n              <li>Serverless computing paradigms</li>\n              <li>Cloud security and compliance</li>\n              <li>Cost optimization strategies</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This course includes 8 comprehensive modules with hands-on labs, infrastructure-as-code exercises, and a capstone project deploying a full-stack application to the cloud.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic understanding of networking concepts and some programming experience. Familiarity with Linux command line is beneficial.</p>\n          `\n        },\n        7: {\n          title: 'Cybersecurity Essentials',\n          content: `\n            <h2>Cybersecurity Essentials</h2>\n            \n            <p>Develop crucial cybersecurity skills to protect systems, networks, and data from digital threats. This course covers fundamental security concepts and practical defense techniques.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Security principles and risk management</li>\n              <li>Network security and monitoring</li>\n              <li>Authentication and access control</li>\n              <li>Common vulnerabilities and attack vectors</li>\n              <li>Encryption and secure communication</li>\n              <li>Incident response and recovery</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course features 10 modules with practical labs, security simulations, and a comprehensive security assessment project for a sample organization.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic understanding of computer networks and operating systems. No specific security background required.</p>\n          `\n        },\n        8: {\n          title: 'Data Structures and Algorithms',\n          content: `\n            <h2>Data Structures and Algorithms</h2>\n            \n            <p>Master the fundamental building blocks of efficient software with this deep dive into data structures and algorithms. Learn how to write optimized code that can handle complex computational challenges.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Array-based structures and linked lists</li>\n              <li>Stacks, queues, and hash tables</li>\n              <li>Trees, graphs, and their traversal algorithms</li>\n              <li>Sorting and searching algorithms</li>\n              <li>Algorithm analysis and Big O notation</li>\n              <li>Problem-solving strategies and optimization techniques</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>This rigorous course includes 12 modules with coding challenges, algorithm implementations, and competitive programming exercises to reinforce concepts.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Solid programming experience in at least one language. Understanding of basic mathematical concepts.</p>\n          `\n        },\n        9: {\n          title: 'DevOps Practices',\n          content: `\n            <h2>DevOps Practices</h2>\n            \n            <p>Bridge the gap between development and operations with modern DevOps methodologies. Learn how to streamline software delivery through automation, collaboration, and continuous improvement.</p>\n            \n            <h3>What You'll Learn:</h3>\n            <ul>\n              <li>Continuous Integration/Continuous Deployment (CI/CD)</li>\n              <li>Infrastructure as Code (IaC)</li>\n              <li>Configuration management and orchestration</li>\n              <li>Monitoring, logging, and observability</li>\n              <li>Microservices and containerization</li>\n              <li>DevSecOps principles</li>\n            </ul>\n            \n            <h3>Course Structure:</h3>\n            <p>The course consists of 9 modules with hands-on labs implementing full DevOps pipelines and a capstone project automating the deployment of a complete application.</p>\n            \n            <h3>Prerequisites:</h3>\n            <p>Basic knowledge of software development and system administration. Familiarity with command-line interfaces and version control.</p>\n          `\n        }\n      };\n\n      if (courseDetails[id]) {\n        setCourse(courseDetails[id]);\n      } else {\n        setCourse({ title: 'Course Not Found', content: '<p>The requested course could not be found.</p>' });\n      }\n      setLoading(false);\n    };\n\n    fetchCourseDetails();\n\n    // Cleanup function that runs when the component unmounts\n    return () => {\n      const timeEnd = new Date();\n      const durationInSeconds = (timeEnd - timeStart) / 1000;\n      \n      // Only record time if the user spent at least 1 second on the page\n      if (durationInSeconds >= 1) {\n        recordVisitTime(durationInSeconds);\n      }\n    };\n  }, [id]);\n\n  // Record time when user navigates away but stays in the app\n  useEffect(() => {\n    const handleBeforeNavigate = () => {\n      if (startTime) {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - startTime) / 1000;\n        \n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      }\n    };\n\n    // Listen for route changes within the app\n    window.addEventListener('beforeunload', handleBeforeNavigate);\n    \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeNavigate);\n    };\n  }, [startTime, id]);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"course-details-container\">\n      <div className=\"course-details-content\">\n        <div className=\"course-back-button\">\n          <Link to=\"/\" className=\"btn back-btn\">← Back to Courses</Link>\n        </div>\n        \n        <div className=\"course-details-body\">\n          <div dangerouslySetInnerHTML={{ __html: course.content }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseDetails; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMiB,eAAe,GAAG,MAAOC,QAAQ,IAAK;IAC1C,IAAI;MACF;MACA,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;QACjC,MAAMhB,KAAK,CAACiB,IAAI,CAAC,mBAAmB,EAAE;UACpCC,QAAQ,EAAEb,EAAE;UACZS,QAAQ,EAAEK,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC;QACFO,OAAO,CAACC,GAAG,CAAC,YAAYH,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC,uBAAuBT,EAAE,EAAE,CAAC;MAC1E;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd;IACA,MAAM6B,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5Bb,YAAY,CAACY,SAAS,CAAC;;IAEvB;IACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMC,aAAa,GAAG;QACpB,CAAC,EAAE;UACDC,KAAK,EAAE,6BAA6B;UACpCC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,8BAA8B;UACrCC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,iBAAiB;UACxBC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,wBAAwB;UAC/BC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,yBAAyB;UAChCC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,iBAAiB;UACxBC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,0BAA0B;UACjCC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC;QACD,CAAC,EAAE;UACDD,KAAK,EAAE,gCAAgC;UACvCC,OAAO,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}