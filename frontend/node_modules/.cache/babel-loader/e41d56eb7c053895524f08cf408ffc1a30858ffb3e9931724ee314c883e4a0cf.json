{"ast":null,"code":"var _jsxFileName = \"/root/home/CP5106/frontend/src/pages/CourseDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './CourseDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [course, setCourse] = useState(null);\n\n  // Detailed course data with expanded content\n  const coursesData = [{\n    id: 1,\n    title: 'Introduction to Programming',\n    description: 'Learn the basics of programming with this introductory course. Perfect for beginners who want to start their coding journey.',\n    image: 'https://via.placeholder.com/300x180?text=Programming+Basics',\n    instructor: 'Dr. James Wilson',\n    duration: '8 weeks',\n    level: 'Beginner',\n    fullDescription: `This comprehensive introduction to programming is designed for absolute beginners with no prior coding experience. Throughout this 8-week course, you'll build a solid foundation in computational thinking and problem-solving skills that are essential for any programming language.\n\n      You'll start by understanding how computers process information and execute instructions. Then, you'll explore fundamental programming concepts including variables, data types, operators, control structures, loops, and functions. By the end of the course, you'll be able to write simple but practical programs and understand code written by others.\n\n      The course uses Python as the primary teaching language due to its readability and simplicity, making it perfect for beginners. However, the concepts you'll learn are applicable to virtually any programming language you might encounter in the future.`,\n    topics: ['Understanding computational thinking', 'Variables and data types', 'Control structures and logic', 'Functions and modular programming', 'Basic algorithms and problem solving', 'Introduction to object-oriented concepts', 'Error handling and debugging', 'Building simple applications'],\n    prerequisites: 'No prior programming experience required. Basic computer skills recommended.'\n  }, {\n    id: 2,\n    title: 'Web Development Fundamentals',\n    description: 'Discover the core concepts of web development including HTML, CSS, and JavaScript to build modern websites.',\n    image: 'https://via.placeholder.com/300x180?text=Web+Development',\n    instructor: 'Sarah Johnson',\n    duration: '10 weeks',\n    level: 'Beginner to Intermediate',\n    fullDescription: `This course provides a comprehensive introduction to modern web development, covering all the essential technologies and practices needed to build responsive, interactive websites from scratch.\n\n      You'll begin with HTML5, learning how to structure web content semantically and accessibly. Next, you'll master CSS3 for styling and layout, including flexbox and CSS grid for creating responsive designs that work on any device. The course then dives into JavaScript, teaching you how to add interactivity, handle events, manipulate the DOM, and work with APIs.\n\n      By the end of this course, you'll have built several projects including a personal portfolio website, an interactive web application, and a responsive landing page. You'll understand how the web works and have the skills to continue exploring more advanced web development topics.`,\n    topics: ['HTML5 semantic markup and structure', 'CSS3 styling, animations, and responsive design', 'JavaScript fundamentals and DOM manipulation', 'Web accessibility principles', 'Version control with Git', 'Frontend build tools and workflows', 'API integration', 'Deployment and hosting'],\n    prerequisites: 'Basic computer skills required. Previous experience with HTML/CSS is helpful but not necessary.'\n  }, {\n    id: 3,\n    title: 'Database Design',\n    description: 'Master the principles of database design and learn how to create efficient, normalized database structures.',\n    image: 'https://via.placeholder.com/300x180?text=Database+Design',\n    instructor: 'Prof. Michael Chen',\n    duration: '6 weeks',\n    level: 'Intermediate',\n    fullDescription: `This course explores the principles and techniques of effective database design, focusing on relational database systems while also introducing NoSQL concepts. You'll learn to design databases that are efficient, maintainable, and optimized for their intended applications.\n\n      Starting with data modeling and entity-relationship diagrams, you'll progress to normalization theory and practical implementation of database schemas. The course covers SQL in depth, including complex queries, joins, indexes, and stored procedures. You'll also learn about transaction management, concurrency control, and database security principles.\n\n      Throughout the course, you'll work on a semester-long project where you'll design and implement a complete database system for a real-world scenario. By the end, you'll have the skills to design database solutions that balance performance, integrity, and scalability needs.`,\n    topics: ['Data modeling and ER diagrams', 'Normalization and denormalization strategies', 'Advanced SQL query techniques', 'Indexes and query optimization', 'Transaction management and ACID properties', 'Introduction to NoSQL databases', 'Database security and permissions', 'Performance tuning and monitoring'],\n    prerequisites: 'Basic understanding of programming concepts and some experience with SQL.'\n  }, {\n    id: 4,\n    title: 'Mobile App Development',\n    description: 'Build cross-platform mobile applications using modern frameworks and best practices.',\n    image: 'https://via.placeholder.com/300x180?text=Mobile+Development',\n    instructor: 'Alex Rodriguez',\n    duration: '12 weeks',\n    level: 'Intermediate',\n    fullDescription: `This hands-on course teaches you how to build professional-quality mobile applications for both iOS and Android platforms using React Native. You'll learn to create truly native apps that perform well and provide an excellent user experience while maintaining a single codebase.\n\n      The course begins with JavaScript/TypeScript fundamentals before diving into React and React Native concepts. You'll explore component-based architecture, state management, navigation patterns, and how to access native device features. You'll also learn essential mobile UI/UX principles and how to implement them in your applications.\n\n      By the course's end, you'll have developed a feature-complete mobile application that you can publish to app stores. You'll understand the entire mobile development lifecycle from concept and design to testing, deployment, and maintenance.`,\n    topics: ['React and React Native core concepts', 'Cross-platform development strategies', 'State management with Redux or Context API', 'Navigation and routing in mobile apps', 'Working with device APIs and native modules', 'Offline data storage and synchronization', 'Performance optimization techniques', 'App store deployment process'],\n    prerequisites: 'Familiarity with JavaScript and some experience with web development (HTML/CSS/JS).'\n  }, {\n    id: 5,\n    title: 'Machine Learning Basics',\n    description: 'Explore the fundamentals of machine learning algorithms and their applications in real-world scenarios.',\n    image: 'https://via.placeholder.com/300x180?text=Machine+Learning',\n    instructor: 'Dr. Emily Zhang',\n    duration: '10 weeks',\n    level: 'Intermediate to Advanced',\n    fullDescription: `This course provides a practical introduction to machine learning concepts, algorithms, and applications. You'll develop a strong foundation in both the theoretical aspects and practical implementation of machine learning systems.\n\n      Starting with the fundamentals of statistical learning theory, you'll explore supervised learning (regression and classification), unsupervised learning (clustering and dimensionality reduction), and an introduction to neural networks. The course emphasizes hands-on implementation using Python and libraries such as scikit-learn, pandas, and TensorFlow/Keras.\n\n      Through weekly programming assignments and a final project, you'll gain experience applying machine learning to real-world problems such as image recognition, natural language processing, and predictive analytics. You'll also learn best practices for data preprocessing, feature engineering, model selection, and evaluation.`,\n    topics: ['Supervised learning algorithms', 'Unsupervised learning techniques', 'Feature engineering and selection', 'Model evaluation and validation', 'Neural networks fundamentals', 'Bias-variance tradeoff and overfitting', 'Ensemble methods', 'Ethical considerations in ML'],\n    prerequisites: 'Programming experience in Python and basic knowledge of linear algebra, calculus, and probability.'\n  }, {\n    id: 6,\n    title: 'Cloud Computing',\n    description: 'Learn how to leverage cloud platforms for scalable and resilient application deployment.',\n    image: 'https://via.placeholder.com/300x180?text=Cloud+Computing',\n    instructor: 'Mark Thompson',\n    duration: '8 weeks',\n    level: 'Intermediate',\n    fullDescription: `This practical course introduces the principles and practices of cloud computing with a focus on AWS (Amazon Web Services), though the concepts apply across major cloud providers. You'll learn to architect, deploy, and manage applications in cloud environments, taking advantage of their scalability, resilience, and cost-effectiveness.\n\n      The course covers fundamental cloud services including compute resources, storage options, networking, databases, and serverless computing. You'll understand infrastructure-as-code principles using tools like AWS CloudFormation or Terraform. Security and compliance in cloud environments are emphasized throughout the curriculum.\n\n      Through hands-on labs and a capstone project, you'll migrate a traditional application to the cloud, implementing best practices for high availability, disaster recovery, monitoring, and optimization. By the end of the course, you'll be prepared to design cloud-native applications and help organizations leverage cloud technologies effectively.`,\n    topics: ['Cloud computing models (IaaS, PaaS, SaaS)', 'Virtual machines and containers', 'Storage and database services', 'Networking and content delivery', 'Serverless architecture', 'Infrastructure as code', 'Monitoring, logging, and observability', 'Cost management and optimization'],\n    prerequisites: 'Basic knowledge of networking concepts, Linux administration, and programming experience.'\n  }, {\n    id: 7,\n    title: 'Cybersecurity Essentials',\n    description: 'Understand the core principles of cybersecurity and how to protect systems from common threats.',\n    image: 'https://via.placeholder.com/300x180?text=Cybersecurity',\n    instructor: 'Lisa Robertson',\n    duration: '9 weeks',\n    level: 'Beginner to Intermediate',\n    fullDescription: `This comprehensive course introduces the fundamental concepts and practices of cybersecurity, providing a solid foundation for those looking to enter the field or enhance their organization's security posture.\n\n      You'll learn about common security threats and vulnerabilities, exploring topics like network security, authentication systems, cryptography, secure software development, and security operations. The course emphasizes a defense-in-depth approach and the CIA (Confidentiality, Integrity, Availability) triad as frameworks for security thinking.\n\n      Hands-on labs give you practical experience with security tools and techniques including vulnerability scanning, network monitoring, encryption implementation, and incident response. Through realistic scenarios and case studies, you'll develop the critical thinking skills needed to analyze security risks and implement appropriate countermeasures.`,\n    topics: ['Security principles and risk management', 'Network and endpoint security', 'Cryptography and secure communications', 'Authentication and access control', 'Web application security', 'Security policies and compliance', 'Incident response and forensics', 'Ethical and legal aspects of cybersecurity'],\n    prerequisites: 'Basic understanding of computer networks and operating systems.'\n  }, {\n    id: 8,\n    title: 'Data Structures and Algorithms',\n    description: 'Master essential data structures and algorithms needed for efficient problem solving in programming.',\n    image: 'https://via.placeholder.com/300x180?text=DS+and+Algorithms',\n    instructor: 'Dr. Robert Miller',\n    duration: '12 weeks',\n    level: 'Intermediate to Advanced',\n    fullDescription: `This rigorous course explores fundamental data structures and algorithms that form the foundation of computer science and efficient software development. You'll learn how to analyze algorithms, understand their time and space complexity, and select the appropriate data structures for different problems.\n\n      The course covers essential data structures including arrays, linked lists, stacks, queues, trees, heaps, graphs, and hash tables. You'll study sorting and searching algorithms, graph algorithms, dynamic programming, greedy algorithms, and divide-and-conquer strategies. Throughout the course, you'll implement these structures and algorithms in a language of your choice.\n\n      Weekly programming assignments and competitive programming challenges will strengthen your problem-solving skills and prepare you for technical interviews. By the end of the course, you'll have the analytical thinking skills to approach complex computational problems efficiently and optimize existing solutions.`,\n    topics: ['Algorithm analysis and Big O notation', 'Linear data structures and their operations', 'Tree and graph algorithms', 'Sorting and searching techniques', 'Hashing and collision resolution', 'Dynamic programming', 'Greedy algorithms', 'Problem-solving strategies'],\n    prerequisites: 'Strong programming skills in at least one language (Java, Python, C++, etc.) and basic discrete mathematics.'\n  }, {\n    id: 9,\n    title: 'DevOps Practices',\n    description: 'Learn modern DevOps methodologies to streamline software development and deployment processes.',\n    image: 'https://via.placeholder.com/300x180?text=DevOps',\n    instructor: 'Daniel Smith',\n    duration: '8 weeks',\n    level: 'Intermediate',\n    fullDescription: `This practical course introduces the philosophy, practices, and tools of DevOps, focusing on how to build efficient, automated pipelines for software delivery. You'll learn how to bridge the gap between development and operations to enable faster, more reliable software releases.\n\n      Starting with the cultural and organizational aspects of DevOps, you'll progress to continuous integration, continuous delivery, infrastructure as code, and monitoring. The course covers essential DevOps tools including Git, Jenkins, Docker, Kubernetes, Ansible, and Prometheus. You'll implement these tools in hands-on labs to automate build, test, and deployment processes.\n\n      Throughout the course, you'll work on a project where you'll set up a complete CI/CD pipeline for a sample application. By the end, you'll understand how to implement DevOps practices in your organization to improve collaboration, increase deployment frequency, and enhance software quality.`,\n    topics: ['DevOps principles and culture', 'Version control workflows', 'Continuous integration and delivery', 'Containerization and orchestration', 'Infrastructure as code', 'Configuration management', 'Monitoring, logging, and observability', 'Site reliability engineering principles'],\n    prerequisites: 'Experience with Linux/Unix systems, basic scripting skills, and familiarity with software development processes.'\n  }];\n  useEffect(() => {\n    // Find the course with the matching id\n    const courseId = parseInt(id);\n    const foundCourse = coursesData.find(c => c.id === courseId);\n    if (foundCourse) {\n      setCourse(foundCourse);\n    }\n    setLoading(false);\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 12\n    }, this);\n  }\n  if (!course) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-not-found\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Course Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The course you're looking for doesn't exist or has been removed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn\",\n        children: \"Back to Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: course.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"course-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), \" Instructor: \", course.instructor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), \" Duration: \", course.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-layer-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), \" Level: \", course.level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-image-large\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: course.image,\n          alt: course.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Course Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"course-summary\",\n          children: course.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Detailed Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-description\",\n          children: course.fullDescription.split('\\n\\n').map((paragraph, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"What You'll Learn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"topics-list\",\n          children: course.topics.map((topic, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: topic\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: course.prerequisites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn primary-btn\",\n            children: \"Enroll Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn secondary-btn\",\n            children: \"Back to Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseDetail, \"jUreU8F3/6KK5AkcIk0JlS1oQrQ=\", false, function () {\n  return [useParams];\n});\n_c = CourseDetail;\nexport default CourseDetail;\nvar _c;\n$RefreshReg$(_c, \"CourseDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","CourseDetail","_s","id","loading","setLoading","course","setCourse","coursesData","title","description","image","instructor","duration","level","fullDescription","topics","prerequisites","courseId","parseInt","foundCourse","find","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","split","map","paragraph","idx","topic","_c","$RefreshReg$"],"sources":["/root/home/CP5106/frontend/src/pages/CourseDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './CourseDetail.css';\n\nconst CourseDetail = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [course, setCourse] = useState(null);\n\n  // Detailed course data with expanded content\n  const coursesData = [\n    {\n      id: 1,\n      title: 'Introduction to Programming',\n      description: 'Learn the basics of programming with this introductory course. Perfect for beginners who want to start their coding journey.',\n      image: 'https://via.placeholder.com/300x180?text=Programming+Basics',\n      instructor: 'Dr. James Wilson',\n      duration: '8 weeks',\n      level: 'Beginner',\n      fullDescription: `This comprehensive introduction to programming is designed for absolute beginners with no prior coding experience. Throughout this 8-week course, you'll build a solid foundation in computational thinking and problem-solving skills that are essential for any programming language.\n\n      You'll start by understanding how computers process information and execute instructions. Then, you'll explore fundamental programming concepts including variables, data types, operators, control structures, loops, and functions. By the end of the course, you'll be able to write simple but practical programs and understand code written by others.\n\n      The course uses Python as the primary teaching language due to its readability and simplicity, making it perfect for beginners. However, the concepts you'll learn are applicable to virtually any programming language you might encounter in the future.`,\n      topics: [\n        'Understanding computational thinking',\n        'Variables and data types',\n        'Control structures and logic',\n        'Functions and modular programming',\n        'Basic algorithms and problem solving',\n        'Introduction to object-oriented concepts',\n        'Error handling and debugging',\n        'Building simple applications'\n      ],\n      prerequisites: 'No prior programming experience required. Basic computer skills recommended.'\n    },\n    {\n      id: 2,\n      title: 'Web Development Fundamentals',\n      description: 'Discover the core concepts of web development including HTML, CSS, and JavaScript to build modern websites.',\n      image: 'https://via.placeholder.com/300x180?text=Web+Development',\n      instructor: 'Sarah Johnson',\n      duration: '10 weeks',\n      level: 'Beginner to Intermediate',\n      fullDescription: `This course provides a comprehensive introduction to modern web development, covering all the essential technologies and practices needed to build responsive, interactive websites from scratch.\n\n      You'll begin with HTML5, learning how to structure web content semantically and accessibly. Next, you'll master CSS3 for styling and layout, including flexbox and CSS grid for creating responsive designs that work on any device. The course then dives into JavaScript, teaching you how to add interactivity, handle events, manipulate the DOM, and work with APIs.\n\n      By the end of this course, you'll have built several projects including a personal portfolio website, an interactive web application, and a responsive landing page. You'll understand how the web works and have the skills to continue exploring more advanced web development topics.`,\n      topics: [\n        'HTML5 semantic markup and structure',\n        'CSS3 styling, animations, and responsive design',\n        'JavaScript fundamentals and DOM manipulation',\n        'Web accessibility principles',\n        'Version control with Git',\n        'Frontend build tools and workflows',\n        'API integration',\n        'Deployment and hosting'\n      ],\n      prerequisites: 'Basic computer skills required. Previous experience with HTML/CSS is helpful but not necessary.'\n    },\n    {\n      id: 3,\n      title: 'Database Design',\n      description: 'Master the principles of database design and learn how to create efficient, normalized database structures.',\n      image: 'https://via.placeholder.com/300x180?text=Database+Design',\n      instructor: 'Prof. Michael Chen',\n      duration: '6 weeks',\n      level: 'Intermediate',\n      fullDescription: `This course explores the principles and techniques of effective database design, focusing on relational database systems while also introducing NoSQL concepts. You'll learn to design databases that are efficient, maintainable, and optimized for their intended applications.\n\n      Starting with data modeling and entity-relationship diagrams, you'll progress to normalization theory and practical implementation of database schemas. The course covers SQL in depth, including complex queries, joins, indexes, and stored procedures. You'll also learn about transaction management, concurrency control, and database security principles.\n\n      Throughout the course, you'll work on a semester-long project where you'll design and implement a complete database system for a real-world scenario. By the end, you'll have the skills to design database solutions that balance performance, integrity, and scalability needs.`,\n      topics: [\n        'Data modeling and ER diagrams',\n        'Normalization and denormalization strategies',\n        'Advanced SQL query techniques',\n        'Indexes and query optimization',\n        'Transaction management and ACID properties',\n        'Introduction to NoSQL databases',\n        'Database security and permissions',\n        'Performance tuning and monitoring'\n      ],\n      prerequisites: 'Basic understanding of programming concepts and some experience with SQL.'\n    },\n    {\n      id: 4,\n      title: 'Mobile App Development',\n      description: 'Build cross-platform mobile applications using modern frameworks and best practices.',\n      image: 'https://via.placeholder.com/300x180?text=Mobile+Development',\n      instructor: 'Alex Rodriguez',\n      duration: '12 weeks',\n      level: 'Intermediate',\n      fullDescription: `This hands-on course teaches you how to build professional-quality mobile applications for both iOS and Android platforms using React Native. You'll learn to create truly native apps that perform well and provide an excellent user experience while maintaining a single codebase.\n\n      The course begins with JavaScript/TypeScript fundamentals before diving into React and React Native concepts. You'll explore component-based architecture, state management, navigation patterns, and how to access native device features. You'll also learn essential mobile UI/UX principles and how to implement them in your applications.\n\n      By the course's end, you'll have developed a feature-complete mobile application that you can publish to app stores. You'll understand the entire mobile development lifecycle from concept and design to testing, deployment, and maintenance.`,\n      topics: [\n        'React and React Native core concepts',\n        'Cross-platform development strategies',\n        'State management with Redux or Context API',\n        'Navigation and routing in mobile apps',\n        'Working with device APIs and native modules',\n        'Offline data storage and synchronization',\n        'Performance optimization techniques',\n        'App store deployment process'\n      ],\n      prerequisites: 'Familiarity with JavaScript and some experience with web development (HTML/CSS/JS).'\n    },\n    {\n      id: 5,\n      title: 'Machine Learning Basics',\n      description: 'Explore the fundamentals of machine learning algorithms and their applications in real-world scenarios.',\n      image: 'https://via.placeholder.com/300x180?text=Machine+Learning',\n      instructor: 'Dr. Emily Zhang',\n      duration: '10 weeks',\n      level: 'Intermediate to Advanced',\n      fullDescription: `This course provides a practical introduction to machine learning concepts, algorithms, and applications. You'll develop a strong foundation in both the theoretical aspects and practical implementation of machine learning systems.\n\n      Starting with the fundamentals of statistical learning theory, you'll explore supervised learning (regression and classification), unsupervised learning (clustering and dimensionality reduction), and an introduction to neural networks. The course emphasizes hands-on implementation using Python and libraries such as scikit-learn, pandas, and TensorFlow/Keras.\n\n      Through weekly programming assignments and a final project, you'll gain experience applying machine learning to real-world problems such as image recognition, natural language processing, and predictive analytics. You'll also learn best practices for data preprocessing, feature engineering, model selection, and evaluation.`,\n      topics: [\n        'Supervised learning algorithms',\n        'Unsupervised learning techniques',\n        'Feature engineering and selection',\n        'Model evaluation and validation',\n        'Neural networks fundamentals',\n        'Bias-variance tradeoff and overfitting',\n        'Ensemble methods',\n        'Ethical considerations in ML'\n      ],\n      prerequisites: 'Programming experience in Python and basic knowledge of linear algebra, calculus, and probability.'\n    },\n    {\n      id: 6,\n      title: 'Cloud Computing',\n      description: 'Learn how to leverage cloud platforms for scalable and resilient application deployment.',\n      image: 'https://via.placeholder.com/300x180?text=Cloud+Computing',\n      instructor: 'Mark Thompson',\n      duration: '8 weeks',\n      level: 'Intermediate',\n      fullDescription: `This practical course introduces the principles and practices of cloud computing with a focus on AWS (Amazon Web Services), though the concepts apply across major cloud providers. You'll learn to architect, deploy, and manage applications in cloud environments, taking advantage of their scalability, resilience, and cost-effectiveness.\n\n      The course covers fundamental cloud services including compute resources, storage options, networking, databases, and serverless computing. You'll understand infrastructure-as-code principles using tools like AWS CloudFormation or Terraform. Security and compliance in cloud environments are emphasized throughout the curriculum.\n\n      Through hands-on labs and a capstone project, you'll migrate a traditional application to the cloud, implementing best practices for high availability, disaster recovery, monitoring, and optimization. By the end of the course, you'll be prepared to design cloud-native applications and help organizations leverage cloud technologies effectively.`,\n      topics: [\n        'Cloud computing models (IaaS, PaaS, SaaS)',\n        'Virtual machines and containers',\n        'Storage and database services',\n        'Networking and content delivery',\n        'Serverless architecture',\n        'Infrastructure as code',\n        'Monitoring, logging, and observability',\n        'Cost management and optimization'\n      ],\n      prerequisites: 'Basic knowledge of networking concepts, Linux administration, and programming experience.'\n    },\n    {\n      id: 7,\n      title: 'Cybersecurity Essentials',\n      description: 'Understand the core principles of cybersecurity and how to protect systems from common threats.',\n      image: 'https://via.placeholder.com/300x180?text=Cybersecurity',\n      instructor: 'Lisa Robertson',\n      duration: '9 weeks',\n      level: 'Beginner to Intermediate',\n      fullDescription: `This comprehensive course introduces the fundamental concepts and practices of cybersecurity, providing a solid foundation for those looking to enter the field or enhance their organization's security posture.\n\n      You'll learn about common security threats and vulnerabilities, exploring topics like network security, authentication systems, cryptography, secure software development, and security operations. The course emphasizes a defense-in-depth approach and the CIA (Confidentiality, Integrity, Availability) triad as frameworks for security thinking.\n\n      Hands-on labs give you practical experience with security tools and techniques including vulnerability scanning, network monitoring, encryption implementation, and incident response. Through realistic scenarios and case studies, you'll develop the critical thinking skills needed to analyze security risks and implement appropriate countermeasures.`,\n      topics: [\n        'Security principles and risk management',\n        'Network and endpoint security',\n        'Cryptography and secure communications',\n        'Authentication and access control',\n        'Web application security',\n        'Security policies and compliance',\n        'Incident response and forensics',\n        'Ethical and legal aspects of cybersecurity'\n      ],\n      prerequisites: 'Basic understanding of computer networks and operating systems.'\n    },\n    {\n      id: 8,\n      title: 'Data Structures and Algorithms',\n      description: 'Master essential data structures and algorithms needed for efficient problem solving in programming.',\n      image: 'https://via.placeholder.com/300x180?text=DS+and+Algorithms',\n      instructor: 'Dr. Robert Miller',\n      duration: '12 weeks',\n      level: 'Intermediate to Advanced',\n      fullDescription: `This rigorous course explores fundamental data structures and algorithms that form the foundation of computer science and efficient software development. You'll learn how to analyze algorithms, understand their time and space complexity, and select the appropriate data structures for different problems.\n\n      The course covers essential data structures including arrays, linked lists, stacks, queues, trees, heaps, graphs, and hash tables. You'll study sorting and searching algorithms, graph algorithms, dynamic programming, greedy algorithms, and divide-and-conquer strategies. Throughout the course, you'll implement these structures and algorithms in a language of your choice.\n\n      Weekly programming assignments and competitive programming challenges will strengthen your problem-solving skills and prepare you for technical interviews. By the end of the course, you'll have the analytical thinking skills to approach complex computational problems efficiently and optimize existing solutions.`,\n      topics: [\n        'Algorithm analysis and Big O notation',\n        'Linear data structures and their operations',\n        'Tree and graph algorithms',\n        'Sorting and searching techniques',\n        'Hashing and collision resolution',\n        'Dynamic programming',\n        'Greedy algorithms',\n        'Problem-solving strategies'\n      ],\n      prerequisites: 'Strong programming skills in at least one language (Java, Python, C++, etc.) and basic discrete mathematics.'\n    },\n    {\n      id: 9,\n      title: 'DevOps Practices',\n      description: 'Learn modern DevOps methodologies to streamline software development and deployment processes.',\n      image: 'https://via.placeholder.com/300x180?text=DevOps',\n      instructor: 'Daniel Smith',\n      duration: '8 weeks',\n      level: 'Intermediate',\n      fullDescription: `This practical course introduces the philosophy, practices, and tools of DevOps, focusing on how to build efficient, automated pipelines for software delivery. You'll learn how to bridge the gap between development and operations to enable faster, more reliable software releases.\n\n      Starting with the cultural and organizational aspects of DevOps, you'll progress to continuous integration, continuous delivery, infrastructure as code, and monitoring. The course covers essential DevOps tools including Git, Jenkins, Docker, Kubernetes, Ansible, and Prometheus. You'll implement these tools in hands-on labs to automate build, test, and deployment processes.\n\n      Throughout the course, you'll work on a project where you'll set up a complete CI/CD pipeline for a sample application. By the end, you'll understand how to implement DevOps practices in your organization to improve collaboration, increase deployment frequency, and enhance software quality.`,\n      topics: [\n        'DevOps principles and culture',\n        'Version control workflows',\n        'Continuous integration and delivery',\n        'Containerization and orchestration',\n        'Infrastructure as code',\n        'Configuration management',\n        'Monitoring, logging, and observability',\n        'Site reliability engineering principles'\n      ],\n      prerequisites: 'Experience with Linux/Unix systems, basic scripting skills, and familiarity with software development processes.'\n    }\n  ];\n\n  useEffect(() => {\n    // Find the course with the matching id\n    const courseId = parseInt(id);\n    const foundCourse = coursesData.find(c => c.id === courseId);\n    \n    if (foundCourse) {\n      setCourse(foundCourse);\n    }\n    setLoading(false);\n  }, [id]);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (!course) {\n    return (\n      <div className=\"course-not-found\">\n        <h2>Course Not Found</h2>\n        <p>The course you're looking for doesn't exist or has been removed.</p>\n        <Link to=\"/\" className=\"btn\">Back to Courses</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"course-detail-container\">\n      <div className=\"course-header\">\n        <div className=\"course-header-content\">\n          <h1>{course.title}</h1>\n          <p className=\"course-meta\">\n            <span><i className=\"fas fa-user\"></i> Instructor: {course.instructor}</span>\n            <span><i className=\"fas fa-clock\"></i> Duration: {course.duration}</span>\n            <span><i className=\"fas fa-layer-group\"></i> Level: {course.level}</span>\n          </p>\n        </div>\n        <div className=\"course-image-large\">\n          <img src={course.image} alt={course.title} />\n        </div>\n      </div>\n\n      <div className=\"course-content-wrapper\">\n        <div className=\"course-description\">\n          <h2>Course Overview</h2>\n          <p className=\"course-summary\">{course.description}</p>\n          \n          <h2>Detailed Description</h2>\n          <div className=\"full-description\">\n            {course.fullDescription.split('\\n\\n').map((paragraph, idx) => (\n              <p key={idx}>{paragraph}</p>\n            ))}\n          </div>\n          \n          <h2>What You'll Learn</h2>\n          <ul className=\"topics-list\">\n            {course.topics.map((topic, idx) => (\n              <li key={idx}>{topic}</li>\n            ))}\n          </ul>\n          \n          <h2>Prerequisites</h2>\n          <p>{course.prerequisites}</p>\n          \n          <div className=\"course-actions\">\n            <button className=\"btn primary-btn\">Enroll Now</button>\n            <Link to=\"/\" className=\"btn secondary-btn\">Back to Courses</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}