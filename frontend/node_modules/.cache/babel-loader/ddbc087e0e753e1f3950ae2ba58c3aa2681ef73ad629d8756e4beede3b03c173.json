{"ast":null,"code":"var _jsxFileName = \"/root/home/CP5106/frontend/src/pages/CourseDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CourseDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseDetails = ({\n  user\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const [unlockThreshold, setUnlockThreshold] = useState(120);\n  const [unlockOrder, setUnlockOrder] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const courseId = parseInt(id);\n\n  // Check if the course is locked\n  useEffect(() => {\n    const checkCourseAccess = async () => {\n      try {\n        // Fetch unlock threshold and order (requires auth)\n        try {\n          var _thresholdRes$data, _orderRes$data;\n          const [thresholdRes, orderRes] = await Promise.all([axios.get('/api/settings/unlock-threshold'), axios.get('/api/settings/unlock-order')]);\n          const thresholdVal = Number((_thresholdRes$data = thresholdRes.data) === null || _thresholdRes$data === void 0 ? void 0 : _thresholdRes$data.value);\n          if (Number.isFinite(thresholdVal)) setUnlockThreshold(thresholdVal);\n          const orderVal = (_orderRes$data = orderRes.data) === null || _orderRes$data === void 0 ? void 0 : _orderRes$data.value;\n          if (Array.isArray(orderVal) && orderVal.length > 0) {\n            setUnlockOrder(orderVal.map(Number).filter(n => Number.isFinite(n)));\n          }\n        } catch (err) {\n          console.error('Error fetching settings:', err);\n        }\n\n        // Determine if current course is first in order\n        const firstCourseId = Array.isArray(unlockOrder) && unlockOrder.length > 0 ? Number(unlockOrder[0]) : 1;\n        if (courseId === firstCourseId) {\n          setIsLocked(false);\n          return;\n        }\n\n        // Check prerequisite course progress according to order\n        const res = await axios.get('/api/courses/progress');\n        let previousCourseTime = 0;\n        const idx = unlockOrder.findIndex(cid => Number(cid) === Number(courseId));\n        if (idx > 0) {\n          const prevId = Number(unlockOrder[idx - 1]);\n          previousCourseTime = res.data[prevId] || 0;\n        } else {\n          // Fallback to direct previous id if not found\n          previousCourseTime = res.data[courseId - 1] || 0;\n        }\n        if (previousCourseTime < (Number.isFinite(unlockThreshold) ? unlockThreshold : 120)) {\n          setIsLocked(true);\n          alert(`This course is locked. You need to spend at least ${Number.isFinite(unlockThreshold) ? unlockThreshold : 120} seconds on the prerequisite course to unlock it.`);\n          navigate('/');\n        } else {\n          setIsLocked(false);\n        }\n      } catch (error) {\n        console.error('Error checking course access:', error);\n        navigate('/');\n      }\n    };\n    checkCourseAccess();\n  }, [courseId, navigate, unlockThreshold, unlockOrder]);\n\n  // Function to record course visit time\n  const recordVisitTime = async duration => {\n    try {\n      if (localStorage.getItem('token') && !isLocked) {\n        await axios.post('/api/courses/time', {\n          courseId,\n          duration: Math.round(duration)\n        });\n        console.log(`Recorded ${Math.round(duration)} seconds for course ${id}`);\n      }\n    } catch (error) {\n      console.error('Failed to record course time:', error);\n    }\n  };\n  useEffect(() => {\n    if (!isLocked) {\n      const timeStart = new Date();\n      setStartTime(timeStart);\n      const fetchCourseDetails = () => {\n        const courseDetails = {\n          1: {\n            title: 'Introduction to Programming',\n            content: `\n              <h2>Introduction to Programming</h2>\n              \n              <p>This comprehensive course provides a solid foundation in programming fundamentals that apply across various languages and platforms. Whether you're a complete beginner or looking to refresh your knowledge, this course will equip you with essential skills.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Core programming concepts like variables, data types, and operators</li>\n                <li>Control structures: conditionals, loops, and functions</li>\n                <li>Basic algorithms and problem-solving techniques</li>\n                <li>Introduction to object-oriented programming principles</li>\n                <li>Fundamental data structures</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course consists of 10 modules with hands-on exercises, coding challenges, and a final project where you'll build a functional application from scratch.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>No prior programming experience required. Just bring your curiosity and willingness to learn!</p>\n            `\n          },\n          2: {\n            title: 'Web Development Fundamentals',\n            content: `\n              <h2>Web Development Fundamentals</h2>\n              \n              <p>Discover the essential technologies that power the modern web. This course provides a comprehensive introduction to front-end web development, teaching you how to create responsive, interactive websites.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>HTML5 for structuring web content</li>\n                <li>CSS3 for styling and layouts</li>\n                <li>JavaScript fundamentals for interactive websites</li>\n                <li>Responsive design principles</li>\n                <li>Web accessibility best practices</li>\n                <li>Version control with Git</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This course features 12 modules with progressive projects that build on each other, culminating in a portfolio-ready website that showcases your skills.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic computer skills and familiarity with browsing the web. No coding experience required.</p>\n            `\n          },\n          3: {\n            title: 'Database Design',\n            content: `\n              <h2>Database Design</h2>\n              \n              <p>Master the art and science of database design with this in-depth course. Learn how to create efficient, scalable, and reliable database structures that can support complex applications.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Relational database concepts and theory</li>\n                <li>Entity-Relationship modeling</li>\n                <li>Normalization techniques (1NF through BCNF)</li>\n                <li>SQL for data definition, manipulation, and queries</li>\n                <li>Indexing and optimization strategies</li>\n                <li>Transaction management and concurrency control</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course includes 8 comprehensive modules with case studies, practical exercises, and a capstone project where you'll design and implement a complete database system.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic understanding of data organization concepts. No specific database experience required.</p>\n            `\n          },\n          4: {\n            title: 'Mobile App Development',\n            content: `\n              <h2>Mobile App Development</h2>\n              \n              <p>Learn to build cross-platform mobile applications that work seamlessly on both iOS and Android. This course focuses on modern frameworks that allow you to write once and deploy everywhere.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Cross-platform development fundamentals</li>\n                <li>UI/UX design principles for mobile</li>\n                <li>State management and data flow</li>\n                <li>API integration and offline functionality</li>\n                <li>Native device features (camera, GPS, notifications)</li>\n                <li>App store deployment processes</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This hands-on course includes 10 modules with progressive app-building exercises, culminating in publishing a fully functional mobile application.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic programming knowledge in JavaScript or similar language. Familiarity with HTML/CSS is beneficial but not required.</p>\n            `\n          },\n          5: {\n            title: 'Machine Learning Basics',\n            content: `\n              <h2>Machine Learning Basics</h2>\n              \n              <p>Dive into the fascinating world of machine learning and artificial intelligence. This course demystifies complex ML concepts and teaches you how to build and deploy practical machine learning models.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Supervised and unsupervised learning algorithms</li>\n                <li>Data preprocessing and feature engineering</li>\n                <li>Model training, validation, and evaluation</li>\n                <li>Classification, regression, and clustering techniques</li>\n                <li>Introduction to neural networks</li>\n                <li>Ethical considerations in ML applications</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course comprises 9 modules with practical exercises using popular ML libraries, real-world datasets, and a final project applying ML to solve a business problem.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic programming experience and fundamental statistics knowledge. Familiarity with Python is highly recommended.</p>\n            `\n          },\n          6: {\n            title: 'Cloud Computing',\n            content: `\n              <h2>Cloud Computing</h2>\n              \n              <p>Explore the power of cloud technologies and learn how to leverage cloud platforms for scalable, resilient, and cost-effective application deployment.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Cloud service models (IaaS, PaaS, SaaS)</li>\n                <li>Cloud deployment architectures</li>\n                <li>Virtualization and containerization technologies</li>\n                <li>Serverless computing paradigms</li>\n                <li>Cloud security and compliance</li>\n                <li>Cost optimization strategies</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This course includes 8 comprehensive modules with hands-on labs, infrastructure-as-code exercises, and a capstone project deploying a full-stack application to the cloud.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic understanding of networking concepts and some programming experience. Familiarity with Linux command line is beneficial.</p>\n            `\n          },\n          7: {\n            title: 'Cybersecurity Essentials',\n            content: `\n              <h2>Cybersecurity Essentials</h2>\n              \n              <p>Develop crucial cybersecurity skills to protect systems, networks, and data from digital threats. This course covers fundamental security concepts and practical defense techniques.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Security principles and risk management</li>\n                <li>Network security and monitoring</li>\n                <li>Authentication and access control</li>\n                <li>Common vulnerabilities and attack vectors</li>\n                <li>Encryption and secure communication</li>\n                <li>Incident response and recovery</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course features 10 modules with practical labs, security simulations, and a comprehensive security assessment project for a sample organization.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic understanding of computer networks and operating systems. No specific security background required.</p>\n            `\n          },\n          8: {\n            title: 'Data Structures and Algorithms',\n            content: `\n              <h2>Data Structures and Algorithms</h2>\n              \n              <p>Master the fundamental building blocks of efficient software with this deep dive into data structures and algorithms. Learn how to write optimized code that can handle complex computational challenges.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Array-based structures and linked lists</li>\n                <li>Stacks, queues, and hash tables</li>\n                <li>Trees, graphs, and their traversal algorithms</li>\n                <li>Sorting and searching algorithms</li>\n                <li>Algorithm analysis and Big O notation</li>\n                <li>Problem-solving strategies and optimization techniques</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This rigorous course includes 12 modules with coding challenges, algorithm implementations, and competitive programming exercises to reinforce concepts.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Solid programming experience in at least one language. Understanding of basic mathematical concepts.</p>\n            `\n          },\n          9: {\n            title: 'DevOps Practices',\n            content: `\n              <h2>DevOps Practices</h2>\n              \n              <p>Bridge the gap between development and operations with modern DevOps methodologies. Learn how to streamline software delivery through automation, collaboration, and continuous improvement.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Continuous Integration/Continuous Deployment (CI/CD)</li>\n                <li>Infrastructure as Code (IaC)</li>\n                <li>Configuration management and orchestration</li>\n                <li>Monitoring, logging, and observability</li>\n                <li>Microservices and containerization</li>\n                <li>DevSecOps principles</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course consists of 9 modules with hands-on labs implementing full DevOps pipelines and a capstone project automating the deployment of a complete application.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic knowledge of software development and system administration. Familiarity with command-line interfaces and version control.</p>\n            `\n          }\n        };\n        if (courseDetails[id]) {\n          setCourse(courseDetails[id]);\n        } else {\n          setCourse({\n            title: 'Course Not Found',\n            content: '<p>The requested course could not be found.</p>'\n          });\n        }\n        setLoading(false);\n      };\n      fetchCourseDetails();\n\n      // Cleanup function that runs when the component unmounts\n      return () => {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - timeStart) / 1000;\n\n        // Only record time if the user spent at least 1 second on the page\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      };\n    }\n  }, [id, isLocked]);\n\n  // Record time when user navigates away but stays in the app\n  useEffect(() => {\n    const handleBeforeNavigate = () => {\n      if (startTime && !isLocked) {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - startTime) / 1000;\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      }\n    };\n\n    // Listen for route changes within the app\n    window.addEventListener('beforeunload', handleBeforeNavigate);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeNavigate);\n    };\n  }, [startTime, id, isLocked]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-details-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-back-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn back-btn\",\n          children: \"\\u2190 Back to Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-details-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: course.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseDetails, \"/Oiawp3/lcCJ+aqp2zQi+2fbGYI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CourseDetails;\nexport default CourseDetails;\nvar _c;\n$RefreshReg$(_c, \"CourseDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","axios","jsxDEV","_jsxDEV","CourseDetails","user","_s","id","navigate","course","setCourse","loading","setLoading","startTime","setStartTime","isLocked","setIsLocked","unlockThreshold","setUnlockThreshold","unlockOrder","setUnlockOrder","courseId","parseInt","checkCourseAccess","_thresholdRes$data","_orderRes$data","thresholdRes","orderRes","Promise","all","get","thresholdVal","Number","data","value","isFinite","orderVal","Array","isArray","length","map","filter","n","err","console","error","firstCourseId","res","previousCourseTime","idx","findIndex","cid","prevId","alert","recordVisitTime","duration","localStorage","getItem","post","Math","round","log","timeStart","Date","fetchCourseDetails","courseDetails","title","content","timeEnd","durationInSeconds","handleBeforeNavigate","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/root/home/CP5106/frontend/src/pages/CourseDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CourseDetails.css';\n\nconst CourseDetails = ({ user }) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const [unlockThreshold, setUnlockThreshold] = useState(120);\n  const [unlockOrder, setUnlockOrder] = useState([1,2,3,4,5,6,7,8,9]);\n  const courseId = parseInt(id);\n\n  // Check if the course is locked\n  useEffect(() => {\n    const checkCourseAccess = async () => {\n      try {\n        // Fetch unlock threshold and order (requires auth)\n        try {\n          const [thresholdRes, orderRes] = await Promise.all([\n            axios.get('/api/settings/unlock-threshold'),\n            axios.get('/api/settings/unlock-order')\n          ]);\n          const thresholdVal = Number(thresholdRes.data?.value);\n          if (Number.isFinite(thresholdVal)) setUnlockThreshold(thresholdVal);\n          const orderVal = orderRes.data?.value;\n          if (Array.isArray(orderVal) && orderVal.length > 0) {\n            setUnlockOrder(orderVal.map(Number).filter((n) => Number.isFinite(n)));\n          }\n        } catch (err) {\n          console.error('Error fetching settings:', err);\n        }\n\n        // Determine if current course is first in order\n        const firstCourseId = Array.isArray(unlockOrder) && unlockOrder.length > 0 ? Number(unlockOrder[0]) : 1;\n        if (courseId === firstCourseId) {\n          setIsLocked(false);\n          return;\n        }\n\n        // Check prerequisite course progress according to order\n        const res = await axios.get('/api/courses/progress');\n        let previousCourseTime = 0;\n        const idx = unlockOrder.findIndex((cid) => Number(cid) === Number(courseId));\n        if (idx > 0) {\n          const prevId = Number(unlockOrder[idx - 1]);\n          previousCourseTime = res.data[prevId] || 0;\n        } else {\n          // Fallback to direct previous id if not found\n          previousCourseTime = res.data[courseId - 1] || 0;\n        }\n        \n        if (previousCourseTime < (Number.isFinite(unlockThreshold) ? unlockThreshold : 120)) {\n          setIsLocked(true);\n          alert(`This course is locked. You need to spend at least ${Number.isFinite(unlockThreshold) ? unlockThreshold : 120} seconds on the prerequisite course to unlock it.`);\n          navigate('/');\n        } else {\n          setIsLocked(false);\n        }\n      } catch (error) {\n        console.error('Error checking course access:', error);\n        navigate('/');\n      }\n    };\n\n    checkCourseAccess();\n  }, [courseId, navigate, unlockThreshold, unlockOrder]);\n\n  // Function to record course visit time\n  const recordVisitTime = async (duration) => {\n    try {\n      if (localStorage.getItem('token') && !isLocked) {\n        await axios.post('/api/courses/time', { \n          courseId,\n          duration: Math.round(duration)\n        });\n        console.log(`Recorded ${Math.round(duration)} seconds for course ${id}`);\n      }\n    } catch (error) {\n      console.error('Failed to record course time:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (!isLocked) {\n      const timeStart = new Date();\n      setStartTime(timeStart);\n\n      const fetchCourseDetails = () => {\n        const courseDetails = {\n          1: {\n            title: 'Introduction to Programming',\n            content: `\n              <h2>Introduction to Programming</h2>\n              \n              <p>This comprehensive course provides a solid foundation in programming fundamentals that apply across various languages and platforms. Whether you're a complete beginner or looking to refresh your knowledge, this course will equip you with essential skills.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Core programming concepts like variables, data types, and operators</li>\n                <li>Control structures: conditionals, loops, and functions</li>\n                <li>Basic algorithms and problem-solving techniques</li>\n                <li>Introduction to object-oriented programming principles</li>\n                <li>Fundamental data structures</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course consists of 10 modules with hands-on exercises, coding challenges, and a final project where you'll build a functional application from scratch.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>No prior programming experience required. Just bring your curiosity and willingness to learn!</p>\n            `\n          },\n          2: {\n            title: 'Web Development Fundamentals',\n            content: `\n              <h2>Web Development Fundamentals</h2>\n              \n              <p>Discover the essential technologies that power the modern web. This course provides a comprehensive introduction to front-end web development, teaching you how to create responsive, interactive websites.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>HTML5 for structuring web content</li>\n                <li>CSS3 for styling and layouts</li>\n                <li>JavaScript fundamentals for interactive websites</li>\n                <li>Responsive design principles</li>\n                <li>Web accessibility best practices</li>\n                <li>Version control with Git</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This course features 12 modules with progressive projects that build on each other, culminating in a portfolio-ready website that showcases your skills.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic computer skills and familiarity with browsing the web. No coding experience required.</p>\n            `\n          },\n          3: {\n            title: 'Database Design',\n            content: `\n              <h2>Database Design</h2>\n              \n              <p>Master the art and science of database design with this in-depth course. Learn how to create efficient, scalable, and reliable database structures that can support complex applications.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Relational database concepts and theory</li>\n                <li>Entity-Relationship modeling</li>\n                <li>Normalization techniques (1NF through BCNF)</li>\n                <li>SQL for data definition, manipulation, and queries</li>\n                <li>Indexing and optimization strategies</li>\n                <li>Transaction management and concurrency control</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course includes 8 comprehensive modules with case studies, practical exercises, and a capstone project where you'll design and implement a complete database system.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic understanding of data organization concepts. No specific database experience required.</p>\n            `\n          },\n          4: {\n            title: 'Mobile App Development',\n            content: `\n              <h2>Mobile App Development</h2>\n              \n              <p>Learn to build cross-platform mobile applications that work seamlessly on both iOS and Android. This course focuses on modern frameworks that allow you to write once and deploy everywhere.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Cross-platform development fundamentals</li>\n                <li>UI/UX design principles for mobile</li>\n                <li>State management and data flow</li>\n                <li>API integration and offline functionality</li>\n                <li>Native device features (camera, GPS, notifications)</li>\n                <li>App store deployment processes</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This hands-on course includes 10 modules with progressive app-building exercises, culminating in publishing a fully functional mobile application.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic programming knowledge in JavaScript or similar language. Familiarity with HTML/CSS is beneficial but not required.</p>\n            `\n          },\n          5: {\n            title: 'Machine Learning Basics',\n            content: `\n              <h2>Machine Learning Basics</h2>\n              \n              <p>Dive into the fascinating world of machine learning and artificial intelligence. This course demystifies complex ML concepts and teaches you how to build and deploy practical machine learning models.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Supervised and unsupervised learning algorithms</li>\n                <li>Data preprocessing and feature engineering</li>\n                <li>Model training, validation, and evaluation</li>\n                <li>Classification, regression, and clustering techniques</li>\n                <li>Introduction to neural networks</li>\n                <li>Ethical considerations in ML applications</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course comprises 9 modules with practical exercises using popular ML libraries, real-world datasets, and a final project applying ML to solve a business problem.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic programming experience and fundamental statistics knowledge. Familiarity with Python is highly recommended.</p>\n            `\n          },\n          6: {\n            title: 'Cloud Computing',\n            content: `\n              <h2>Cloud Computing</h2>\n              \n              <p>Explore the power of cloud technologies and learn how to leverage cloud platforms for scalable, resilient, and cost-effective application deployment.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Cloud service models (IaaS, PaaS, SaaS)</li>\n                <li>Cloud deployment architectures</li>\n                <li>Virtualization and containerization technologies</li>\n                <li>Serverless computing paradigms</li>\n                <li>Cloud security and compliance</li>\n                <li>Cost optimization strategies</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This course includes 8 comprehensive modules with hands-on labs, infrastructure-as-code exercises, and a capstone project deploying a full-stack application to the cloud.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic understanding of networking concepts and some programming experience. Familiarity with Linux command line is beneficial.</p>\n            `\n          },\n          7: {\n            title: 'Cybersecurity Essentials',\n            content: `\n              <h2>Cybersecurity Essentials</h2>\n              \n              <p>Develop crucial cybersecurity skills to protect systems, networks, and data from digital threats. This course covers fundamental security concepts and practical defense techniques.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Security principles and risk management</li>\n                <li>Network security and monitoring</li>\n                <li>Authentication and access control</li>\n                <li>Common vulnerabilities and attack vectors</li>\n                <li>Encryption and secure communication</li>\n                <li>Incident response and recovery</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course features 10 modules with practical labs, security simulations, and a comprehensive security assessment project for a sample organization.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic understanding of computer networks and operating systems. No specific security background required.</p>\n            `\n          },\n          8: {\n            title: 'Data Structures and Algorithms',\n            content: `\n              <h2>Data Structures and Algorithms</h2>\n              \n              <p>Master the fundamental building blocks of efficient software with this deep dive into data structures and algorithms. Learn how to write optimized code that can handle complex computational challenges.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Array-based structures and linked lists</li>\n                <li>Stacks, queues, and hash tables</li>\n                <li>Trees, graphs, and their traversal algorithms</li>\n                <li>Sorting and searching algorithms</li>\n                <li>Algorithm analysis and Big O notation</li>\n                <li>Problem-solving strategies and optimization techniques</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>This rigorous course includes 12 modules with coding challenges, algorithm implementations, and competitive programming exercises to reinforce concepts.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Solid programming experience in at least one language. Understanding of basic mathematical concepts.</p>\n            `\n          },\n          9: {\n            title: 'DevOps Practices',\n            content: `\n              <h2>DevOps Practices</h2>\n              \n              <p>Bridge the gap between development and operations with modern DevOps methodologies. Learn how to streamline software delivery through automation, collaboration, and continuous improvement.</p>\n              \n              <h3>What You'll Learn:</h3>\n              <ul>\n                <li>Continuous Integration/Continuous Deployment (CI/CD)</li>\n                <li>Infrastructure as Code (IaC)</li>\n                <li>Configuration management and orchestration</li>\n                <li>Monitoring, logging, and observability</li>\n                <li>Microservices and containerization</li>\n                <li>DevSecOps principles</li>\n              </ul>\n              \n              <h3>Course Structure:</h3>\n              <p>The course consists of 9 modules with hands-on labs implementing full DevOps pipelines and a capstone project automating the deployment of a complete application.</p>\n              \n              <h3>Prerequisites:</h3>\n              <p>Basic knowledge of software development and system administration. Familiarity with command-line interfaces and version control.</p>\n            `\n          }\n        };\n\n        if (courseDetails[id]) {\n          setCourse(courseDetails[id]);\n        } else {\n          setCourse({ title: 'Course Not Found', content: '<p>The requested course could not be found.</p>' });\n        }\n        setLoading(false);\n      };\n\n      fetchCourseDetails();\n\n      // Cleanup function that runs when the component unmounts\n      return () => {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - timeStart) / 1000;\n        \n        // Only record time if the user spent at least 1 second on the page\n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      };\n    }\n  }, [id, isLocked]);\n\n  // Record time when user navigates away but stays in the app\n  useEffect(() => {\n    const handleBeforeNavigate = () => {\n      if (startTime && !isLocked) {\n        const timeEnd = new Date();\n        const durationInSeconds = (timeEnd - startTime) / 1000;\n        \n        if (durationInSeconds >= 1) {\n          recordVisitTime(durationInSeconds);\n        }\n      }\n    };\n\n    // Listen for route changes within the app\n    window.addEventListener('beforeunload', handleBeforeNavigate);\n    \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeNavigate);\n    };\n  }, [startTime, id, isLocked]);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"course-details-container\">\n      <div className=\"course-details-content\">\n        <div className=\"course-back-button\">\n          <Link to=\"/\" className=\"btn back-btn\">← Back to Courses</Link>\n        </div>\n        \n        <div className=\"course-details-body\">\n          <div dangerouslySetInnerHTML={{ __html: course.content }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseDetails; "],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,8BAA8B;YACrCC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,iBAAiB;YACxBC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,wBAAwB;YAC/BC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,yBAAyB;YAChCC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,iBAAiB;YACxBC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,0BAA0B;YACjCC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACU,CAAC;UACD,CAAC,EAAE;YACDD,KAAK,EAAE,gCAAgC;YACvCC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}